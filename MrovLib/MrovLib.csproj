<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.1</TargetFramework>
        <AssemblyName>MrovLib</AssemblyName>
        <Description>Common methods for my mods.</Description>
        <Version>0.1.1</Version>

        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <LangVersion>latest</LangVersion>
        <IsPackable>true</IsPackable>

        <PackageId>mrov.$(AssemblyName)</PackageId>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageIcon>icon.png</PackageIcon>

        <RootNamespace>$(AssemblyName)</RootNamespace>

        <!-- https://spdx.org/licenses/ -->
        <!-- <PackageLicenseExpression>CC-BY-NC-ND-4.0</PackageLicenseExpression> -->

        <!-- <RepositoryType>git</RepositoryType> -->
        <!-- <RepositoryUrl>https://github.com/AndreyMrovol/LethalWeatherRegistry/</RepositoryUrl> -->
        <!-- <PackageProjectUrl>$(RepositoryUrl)</PackageProjectUrl> -->
    </PropertyGroup>

    <ItemGroup>
        <None Include="$(ProjectDir)../README.md" Pack="true" PackagePath="/" />
        <None Include="$(ProjectDir)../icon.png" Pack="true" PackagePath="/"/>
    </ItemGroup>

    <PropertyGroup>
        <GameDirectory>V:\Steam\steamapps\common\Lethal Company</GameDirectory>
        <LibraryDirectory>../lib</LibraryDirectory>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.1">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>

        <PackageReference Include="BepInEx.Core" Version="5.4.21" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all"/>
        <PackageReference Include="BepInEx.PluginInfoProps" Version="1.*"/>
        <PackageReference Include="Lib.Harmony" Version="2.3.3" />
        <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />

        <PackageReference Include="MinVer" Version="4.*" PrivateAssets="all" Private="false"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="LethalCompany.GameLibs.Steam" Version="50.0.1-ngd.0" Publicize="true"/>
    </ItemGroup>

    <!-- Define all DownloadInfo items -->
    <!-- <ItemGroup>
        <DownloadInfo Include="@(Reference->WithMetadataValue('DownloadInfo', 'Url')->Metadata('DownloadInfo'))" />
    </ItemGroup> -->

    <!-- Target to download dependencies -->
    <Target Name="DownloadDependencies" Condition="'$(Configuration)'=='Release'" BeforeTargets="BeforeBuild">
        <!-- Define properties for URLs and Zip output paths -->
        <PropertyGroup>
        <DownloadInfoUrls>@(DownloadInfo->'%(Url)')</DownloadInfoUrls>
        <DownloadInfoZipOutputPaths>@(DownloadInfo->'%(ZipOutputPath)')</DownloadInfoZipOutputPaths>
        </PropertyGroup>

        <!-- Execute the Node.js script -->
        <Exec Command="node $(ProjectDir)../downloader.js $(DownloadInfoUrls) $(DownloadInfoZipOutputPaths)" />
    </Target>

    <Target Name="CopyLocalDependencies" AfterTargets="DownloadDependencies" Condition="'$(Configuration)'=='Release'">
        <!-- copy all files from ../assets/lib into ../lib -->

        <ItemGroup>
            <LibraryFiles Include="$(ProjectDir)../assets/lib/*" />
        </ItemGroup>

        <Copy SourceFiles="@(LibraryFiles)" DestinationFolder="$(LibraryDirectory)" />
    </Target>

    <ItemGroup>
        <!-- this is not really required -->
        <!-- <PackageReference Include="TeamBMX.LobbyCompatibility" Version="1.0.1" /> -->

        <!-- <PackageReference Include="Evaisa.LethalLib" Version="0.16.0" /> -->

        <!-- <Reference Include="MMHOOK_Assembly-CSharp"><HintPath>../lib/MMHOOK_Assembly-CSharp.dll</HintPath></Reference> -->

        <!-- References with DownloadDetails -->
        <Reference Include="LethalLevelLoader">
            <HintPath>$(LibraryDirectory)/LethalLevelLoader.dll</HintPath>
        </Reference>
        <DownloadInfo Include="LethalLevelLoader">
            <Url>https://thunderstore.io/package/download/IAmBatby/LethalLevelLoader/1.2.4/</Url>
            <ZipOutputPath>$(LibraryDirectory)/lethallevelloader.zip</ZipOutputPath>
        </DownloadInfo>

        <DownloadInfo Include="WeatherTweaks">
            <Url>https://thunderstore.io/package/download/mrov/WeatherTweaks/0.5.10/</Url>
            <ZipOutputPath>$(LibraryDirectory)/weathertweaks.zip</ZipOutputPath>
        </DownloadInfo>
    
        <Reference Include="OldLLLLib">
            <HintPath>$(LibraryDirectory)/OldLLLLib.dll</HintPath>
        </Reference>
    </ItemGroup>


    <!-- <Target Name="NetcodePatch" AfterTargets="PostBuildEvent">
        <Exec Command="netcode-patch -nv 1.5.2 &quot;$(TargetPath)&quot; @(ReferencePathWithRefAssemblies->'&quot;%(Identity)&quot;', ' ')"/>
    </Target> -->

    <PropertyGroup>
        <MinVerDefaultPreReleaseIdentifiers>dev</MinVerDefaultPreReleaseIdentifiers>
        <MinVerTagPrefix>v</MinVerTagPrefix>
    </PropertyGroup>

    <!-- MinVer Set Mod Version from Git -->
    <Target Name="SetPluginVersion" BeforeTargets="AddGeneratedFile" DependsOnTargets="MinVer">
        <PropertyGroup>
            <PlainVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</PlainVersion>
            <BepInExPluginVersion>$(PlainVersion)</BepInExPluginVersion>
        </PropertyGroup>
    </Target>

    <!-- save plugin name and version to text files - required by github actions -->
    <Target Name="SaveVersionAndNameToFiles" DependsOnTargets="SetPluginVersion">
        <WriteLinesToFile File="$(ProjectDir)dist/name.txt" Lines="$(AssemblyName)" Overwrite="true" />
        <WriteLinesToFile File="$(ProjectDir)dist/version.txt" Lines="$(PlainVersion)" Overwrite="true" />
    </Target>
    
    <Target Name="PackThunderstore" DependsOnTargets="SetPluginVersion;SaveVersionAndNameToFiles" AfterTargets="PostBuildEvent" Condition="$(Configuration) == 'Release'">
        <MakeDir Directories="$(ProjectDir)../assets/bundles" Condition="!Exists('$(ProjectDir)../assets/bundles')" />
        
        <Exec Command="dotnet tcli build --config-path $(ProjectDir)../assets/thunderstore.toml --package-version $(PlainVersion)" />
        <ItemGroup>
            <FilesToRename Include="$(ProjectDir)dist/*-$(PlainVersion).zip" />
        </ItemGroup>
        <Move SourceFiles="@(FilesToRename)" DestinationFiles="@(FilesToRename -&gt; Replace($(PlainVersion), $(MinVerVersion)))" />
    </Target>
    
    <Target Name="PublishThunderstore" DependsOnTargets="SetPluginVersion;SaveVersionAndNameToFiles">
        <Exec Command="dotnet tcli publish --config-path $(ProjectDir)../assets/thunderstore.toml --file $(ProjectDir)dist/*-$(MinVerVersion).zip" />
    </Target>
    
    <!-- <Target Name="ZipCurseForge" AfterTargets="PackThunderstore">
        <MakeDir Directories="$(ProjectDir)dist/output/" Condition="!Exists('$(ProjectDir)dist/output/')" />
        <Copy SourceFiles="$(ProjectDir)bin/Release/netstandard2.1/$(AssemblyName).dll" DestinationFiles="$(ProjectDir)dist/output/$(AssemblyName).dll" />

        <ZipDirectory
            SourceDirectory="$(ProjectDir)dist/output/"
            DestinationFile="$(ProjectDir)dist/curseforge.zip"
            Overwrite="true" />
    </Target> -->

    <ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
        <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all"/>
    </ItemGroup>
</Project>
